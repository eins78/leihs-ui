#!/usr/bin/env bash
set -eu


### VARIABLES and PWD #########################################################

set -x

PROJECT_NAME="leihs-ui"

PROJECT_DIR="$(cd -- "$(dirname "${BASH_SOURCE}")" > /dev/null 2>&1 ; cd .. ; pwd -P)"
ARTEFACT_NAME="$PROJECT_NAME"
ARTEFACT_PATHS="./dist ./bootstrap-theme-leihs/build"
DIGEST="$(git -C "$PROJECT_DIR" log -n 1 HEAD --pretty=%T)"
LOCAL_CACHE_DIR="${LOCAL_CACHE_DIR:-"${TMPDIR:-/tmp/}/leihs-build-cache"}"
LOCAL_CACHED_ARTEFACT_PATH="${LOCAL_CACHE_DIR}/${ARTEFACT_NAME}_${DIGEST}.tgz"
S3_CACHED_ARTEFACT_NAME="${ARTEFACT_NAME}_${DIGEST}.tgz"
BUILD_CACHE_DISABLED="${BUILD_CACHE_DISABLED:-NO}"

set +x

cd "${PROJECT_DIR}"
echo "PWD: $PWD"

if [ $BUILD_CACHE_DISABLED == "YES" ] ||  [ $BUILD_CACHE_DISABLED == "NO" ]; then
  echo "BUILD_CACHE_DISABLED=$BUILD_CACHE_DISABLED"
  mkdir -p "$LOCAL_CACHE_DIR"
else
  echo 'BUILD_CACHE_DISABLED must be unset, or "YES", or "NO"'
  exit 1
fi



### functions #################################################################

function build {
  ./bin/build-core || { echo "build error!"; exit 1; }
}

function pack {
  tar -cvz -f "$LOCAL_CACHED_ARTEFACT_PATH" $ARTEFACT_PATHS
}

function extract {
  npm run build:symlinks
  tar -xvz -f "$LOCAL_CACHED_ARTEFACT_PATH"
}


### MAIN ######################################################################

if [ $BUILD_CACHE_DISABLED == "YES" ]; then

  echo "INFO: BUILD_CACHE_DISABLED is YES, building and nothing else"
  build

else

  source ./bin/require-clean-working-tree
  require-clean-working-tree

  # RUBY on CI for ./bin/s3-cache-helper
  RUBY="${RUBY:-EMPTY}"
  if [ "${RUBY}" != 'EMPTY' ]; then
    export PATH=~/.rubies/$RUBY/bin:$PATH
  fi

  echo "LOCAL_CACHED_ARTEFACT_PATH: $LOCAL_CACHED_ARTEFACT_PATH"

  if [ -e $LOCAL_CACHED_ARTEFACT_PATH ]; then

    echo "INFO: locally cached artefact found, extracting, and caching ..."
    extract

    ./bin/s3-cache-helper upload -n "$S3_CACHED_ARTEFACT_NAME" -p "$LOCAL_CACHED_ARTEFACT_PATH"
  else

    echo "S3_CACHED_ARTEFACT_NAME: $S3_CACHED_ARTEFACT_NAME"
    echo "INFO: trying to download from S3 cache"
    ./bin/s3-cache-helper download -n "$S3_CACHED_ARTEFACT_NAME" -p "$LOCAL_CACHED_ARTEFACT_PATH"

    if [ -e $LOCAL_CACHED_ARTEFACT_PATH ]; then

      echo "INFO: artefact found, extracting "
      extract
    else

      echo "INFO: no cached artefact found: building, packing, and caching ..."
      build
      pack
      ./bin/s3-cache-helper upload -n "$S3_CACHED_ARTEFACT_NAME" -p "$LOCAL_CACHED_ARTEFACT_PATH"
    fi
  fi
fi

cd -

echo "OK âœ”"

# vi: ft=sh
